server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: flog_scrape
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        #filters:
        #  - name: label
        #    values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_monitoringGroup']
        target_label: 'monitoringGroup'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'composeproject'
      - source_labels: [ '__meta_docker_container_label_com_docker_compose_service' ]
        target_label: 'composeservice'
      - source_labels: [ 'composeproject' ]
        regex: '^docker$'
        target_label: 'composeproject'
        replacement: 'sf_docker'
      - source_labels: [ 'composeproject' ]
        regex: '^sf-docker$'
        target_label: 'composeproject'
        replacement: 'sf_docker'
      - source_labels: [ 'composeproject' ]
        regex: '^all-in-one$'
        target_label: 'composeproject'
        replacement: 'sf_docker'        
      - source_labels: [ 'composeproject' ]
        regex: '^smartface$'
        target_label: 'composeproject'
        replacement: 'sf_docker'
    
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            levelNonInfo: '"@l"'
            jsonParsable: '"@t"'
            sourceContext: SourceContext
            serviceName: ServiceName
      - template:
          source: level
          template: '{{ or .levelNonInfo "Information" }}'
      - template:
          source: structured
          template: '{{ if .jsonParsable }}true{{ else }}false{{ end }}'
      - labels:
          level:
          structured:
          sourceContext:
          serviceName:
          tenantId:
