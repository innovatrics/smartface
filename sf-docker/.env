# RMQ config
RabbitMQ__Hostname=rmq
RabbitMQ__Username=guest
RabbitMQ__Password=guest
RabbitMQ__Port=5672

# Database config
#Database__DbEngine=MsSql
#ConnectionStrings__CoreDbContext=Server=mssql;Database=SmartFace;User ID=sa;Password=Test1234;TrustServerCertificate=true;
Database__DbEngine=PgSql
ConnectionStrings__CoreDbContext=Server=pgsql;Database=smartface;Username=postgres;Password=Test1234;Trust Server Certificate=true;

# S3 config
S3Bucket__Endpoint=http://minio:9000

# Set true when a Jaeger tracing is required
AppSettings__USE_JAEGER_APP_SETTINGS=false

# Jaeger tracing endpoint. 'jaeger' is the name of included docker container. 
# If targeting outside SmartFace docker, change to remote URL
JAEGER_AGENT_HOST=jaeger

# API config - we use port 80 in docker and forward it as needed
Hosting__Host=http://0.0.0.0
Hosting__Port=80

# Using NoSql database
NoSqlDataStorageDisabled=false

# metrics server
Metrics__PROMETHEUS_METRIC_SERVER_HOSTNAME=*

# Using template for Gstreamer pipeline
#linux
GstPipelineTemplate=uridecodebin uri={0} source::latency=0 ! queue max-size-buffers=1 leaky=downstream ! nvvideoconvert ! video/x-raw, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink
#jetson
GstPipelineTemplate_Jetson=uridecodebin uri={0} source::latency=0 ! queue max-size-buffers=1 leaky=downstream ! nvvidconv ! video/x-raw, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink

# Registry, must end with a forward slash `/`
REGISTRY=registry.gitlab.com/innovatrics/smartface/

# Version
SF_VERSION=v5_4.12.0
AC_VERSION=v5_1.6.0
SFS_VERSION=v5_1.9.0
JETSON_VERSION=v5_4.12.0
