services:
  sf-base:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-base:${SF_VERSION}
    command: --serviceName SFBase
    ports:
      - 2406:2406

  sf-group:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-grouping:${SF_VERSION}
    command: --serviceName SFGroup

  sf-streamdatadbworker:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-streamdatadbworker:${SF_VERSION}

  api:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-api:${SF_VERSION}
    ports:
      - 8098:80
    environment:
      MQTT__Hostname:
      MQTT__Username:
      MQTT__Password:
      MQTT__Port:
      MQTT__UseSsl:
      CameraDefaults__PreviewPort:
      FeatureManagement__ReadOnlyWatchlists: true

  sf-graphql-api:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-graphql-api:${SF_VERSION}
    labels:
      scrapeMetrics: true
    ports:
      - 8097:80
    expose:
      - 4318
    environment:
      MQTT__Hostname:
      MQTT__Username:
      MQTT__Password:
      MQTT__Port:
      MQTT__UseSsl:

  odata-api:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-odata-api:${SF_VERSION}
    ports:
      - 8099:80

  detector:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-detector:${SF_VERSION}
    #environment:
    # Gpu__GpuEnabled: true
    # Gpu__GpuNeuralRuntime: Tensor
    #volumes:
    # - "/var/tmp/innovatrics/tensor-rt:/var/tmp/innovatrics/tensor-rt"
    #runtime: nvidia

  pedestrian-detector:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-pedestrian-detector:${SF_VERSION}
    #environment:
    # Gpu__GpuEnabled: true
    # Gpu__GpuNeuralRuntime: Tensor
    #volumes:
    # - "/var/tmp/innovatrics/tensor-rt:/var/tmp/innovatrics/tensor-rt"
    #runtime: nvidia

  object-detector:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-object-detector:${SF_VERSION}
    #environment:
    # Gpu__GpuEnabled: true
    #runtime: nvidia

  pedestrian-extractor:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-pedestrian-extractor:${SF_VERSION}
    #environment:
    # Gpu__GpuEnabled: true
    #runtime: nvidia

  extractor:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-extractor:${SF_VERSION}
    labels:
      scrapeMetrics: true
    expose:
      - 4318
    #environment:
    # Gpu__GpuEnabled: true
    # Gpu__GpuNeuralRuntime: Tensor
    #volumes:
    # - "/var/tmp/innovatrics/tensor-rt:/var/tmp/innovatrics/tensor-rt"
    #runtime: nvidia

  matcher:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-matcher:${SF_VERSION}
    cpuset: "0"

  face-matcher:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-face-matcher:${SF_VERSION}

  video-aggregator:
    extends:
      service: common-rabbitmq-db-s3
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-video-aggregator:${SF_VERSION}

  video-collector:
    extends:
      service: common-rabbitmq-db-s3
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-video-collector:${SF_VERSION}

  video-reader:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-video-reader:${SF_VERSION}
    labels:
      scrapeMetrics: true
    expose:
      - 4318
    environment:
      S3Bucket__Endpoint:
      S3Bucket__BucketName:
      S3Bucket__AccessKey:
      S3Bucket__SecretKey:

  edge-stream-processor:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-edge-stream-processor:${SF_VERSION}
    environment:
      NoSqlDataStorageDisabled:

  edge-streams-state-synchronizer:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-edge-streams-state-synchronizer:${SF_VERSION}
    environment:
      MQTT__Hostname:
      MQTT__Username:
      MQTT__Password:
      MQTT__Port:
      MQTT__UseSsl:
      Rpc__TimeoutMs:

  sf-station:
    extends:
      service: common
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-station:${SFS_VERSION}
    ports:
      - 8000:8000
    environment:
      FeatureManagement__ReadOnlyWatchlists: true
    env_file: .env.sfstation

  db-synchronization-follower:
    extends:
      service: common-rabbitmq-db-s3
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-db-synchronization-follower:${SF_VERSION}
    container_name: SFDbSynchronizationFollower
    ports:
      - 8100:80
    restart: unless-stopped
    environment:
      Leader__Address:
      ClientAuthentication__UseAuthentication:
      ClientAuthentication__TokenEndpoint:
      ClientAuthentication__ClientId:
      ClientAuthentication__ClientSecret:
      ClientAuthentication__Audience:

networks:
  default:
    external:
      name: sf-network
