version: "3.4"
services:
  sf-base:
    image: ${REGISTRY}sf-base:${SF_VERSION}
    container_name: SFBase
    command: --serviceName SFBase
    ports:
      - 2406:2406
    restart: unless-stopped
    environment:
      - RabbitMQ__Hostname
      - RabbitMQ__Username
      - RabbitMQ__Password
      - RabbitMQ__Port
      - ConnectionStrings__CoreDbContext
      - Database__DbEngine
      - AppSettings__Log-RollingFile-Enabled=false
      - AppSettings__USE_JAEGER_APP_SETTINGS
      - JAEGER_AGENT_HOST
      - S3Bucket__Endpoint
      - S3Bucket__BucketName
      - S3Bucket__AccessKey
      - S3Bucket__SecretKey
      - NoSqlDataStorageDisabled
      - Metrics__PROMETHEUS_METRIC_SERVER_HOSTNAME
    volumes:
      - "./iengine.lic:/etc/innovatrics/iengine.lic"

  sf-group:
    image: ${REGISTRY}sf-base:${SF_VERSION}
    container_name: SFGroup
    command: --serviceName SFGroup
    restart: unless-stopped
    environment:
      - RabbitMQ__Hostname
      - RabbitMQ__Username
      - RabbitMQ__Password
      - RabbitMQ__Port
      - ConnectionStrings__CoreDbContext
      - Database__DbEngine
      - AppSettings__Log-RollingFile-Enabled=false
      - AppSettings__USE_JAEGER_APP_SETTINGS
      - JAEGER_AGENT_HOST
      - S3Bucket__Endpoint
      - S3Bucket__BucketName
      - S3Bucket__AccessKey
      - S3Bucket__SecretKey
      - NoSqlDataStorageDisabled
      - Metrics__PROMETHEUS_METRIC_SERVER_HOSTNAME
    volumes:
      - "./iengine.lic:/etc/innovatrics/iengine.lic"

api:
    image: ${REGISTRY}sf-api:${SF_VERSION}
    container_name: SFApi
    ports:
      # we forward the configured ports to default SF ports
      - 8098:${Hosting__Port}
    restart: unless-stopped
    environment:
      - RabbitMQ__Hostname
      - RabbitMQ__Username
      - RabbitMQ__Password
      - RabbitMQ__Port
      - ConnectionStrings__CoreDbContext
      - Database__DbEngine
      - Hosting__Host
      - Hosting__Port
      - AppSettings__Log-RollingFile-Enabled=false
      - AppSettings__USE_JAEGER_APP_SETTINGS
      - JAEGER_AGENT_HOST
      - S3Bucket__Endpoint
      - S3Bucket__BucketName
      - S3Bucket__AccessKey
      - S3Bucket__SecretKey
      - NoSqlDataStorageDisabled
      - Metrics__PROMETHEUS_METRIC_SERVER_HOSTNAME
      - CameraDefaults__PreviewPort
    volumes:
      - "./iengine.lic:/etc/innovatrics/iengine.lic"

  sf-graphql-api:
    image: ${REGISTRY}sf-graphql-api:${SF_VERSION}
    container_name: SFGraphQLApi
    ports:
      # we forward the configured ports to default SF ports
      - 8097:${Hosting__Port}
    restart: unless-stopped
    environment:
      - ConnectionStrings__CoreDbContext
      - Database__DbEngine
      - Hosting__Host
      - Hosting__Port
      - AppSettings__Log-RollingFile-Enabled=false
      - AppSettings__USE_JAEGER_APP_SETTINGS
      - JAEGER_AGENT_HOST
      - AppSettings__Log_RabbitMq_Enabled

  odata-api:
    image: ${REGISTRY}sf-odata-api:${SF_VERSION}
    container_name: SFODataApi
    ports:
      # we forward the configured ports to default SF ports
      - 8099:${Hosting__Port}
    restart: unless-stopped
    environment:
      - RabbitMQ__Hostname
      - RabbitMQ__Username
      - RabbitMQ__Password
      - RabbitMQ__Port
      - ConnectionStrings__CoreDbContext
      - Database__DbEngine
      - Hosting__Host
      - Hosting__Port
      - AppSettings__Log-RollingFile-Enabled=false
      - AppSettings__USE_JAEGER_APP_SETTINGS
      - JAEGER_AGENT_HOST
      - S3Bucket__Endpoint
      - S3Bucket__BucketName
      - S3Bucket__AccessKey
      - S3Bucket__SecretKey
      - NoSqlDataStorageDisabled
      - Metrics__PROMETHEUS_METRIC_SERVER_HOSTNAME
    volumes:
      - "./iengine.lic:/etc/innovatrics/iengine.lic"

  access-controller:
    image: ${REGISTRY}sf-access-controller:${AC_VERSION}
    container_name: SFAccessController
    ports:
      # we forward the configured ports to default SF ports
      - 5050:${Hosting__Port}
    restart: unless-stopped
    environment:
      - RabbitMq__HostName=${RabbitMQ__Hostname}
      - RabbitMq__UserName=${RabbitMQ__Username}
      - RabbitMq__Password=${RabbitMQ__Password}
      - RabbitMq__Port=${RabbitMQ__Port}
      - Kestrel__EndPoints__Http__Url=${Hosting__Host}:${Hosting__Port}
    env_file: .env.sfac

  sf-station:
    image: ${REGISTRY}sf-station:${SFS_VERSION}
    container_name: SFStation
    restart: unless-stopped
    ports:
      - 8000:8000
    env_file: .env.sfstation

networks:
  default:
    external:
      name: sf-network
