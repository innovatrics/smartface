services:
  detector:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-detector:${SF_VERSION}

  extractor:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-extractor:${SF_VERSION}
    labels:
      scrapeMetrics: true
    expose:
      - 4318

  matcher:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-matcher:${SF_VERSION}
    cpuset: "0"

  liveness:
    extends:
      service: common-rabbitmq
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-liveness:${SF_VERSION}
    labels:
      scrapeMetrics: true
    expose:
      - 4318

  watchlist-api:
    extends:
      service: common-rabbitmq-db-s3-scrapeMetrics
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-api:${SF_VERSION}
    ports:
      - 8098:80
    environment:
      MQTT__Hostname:
      MQTT__Username:
      MQTT__Password:
      MQTT__Port:
      MQTT__UseSsl:
      Hosting__Host: http://+
      Hosting__Port: 80
      CameraDefaults__PreviewPort:
      FeatureManagement__Watchlist: true
      FeatureManagement__Full: false

  sf-station:
    extends:
      service: common
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-station:${SFS_VERSION}
    container_name: SFStation
    restart: unless-stopped
    ports:
      - 8000:8000
    env_file: .env.sfstation

  sf-graphql-api:
    extends:
      service: common-rabbitmq-db
      file: docker-compose-common.yml
    image: ${REGISTRY}sf-graphql-api:${SF_VERSION}
    labels:
      scrapeMetrics: true
    ports:
      - 8097:80
    expose:
      - 4318
    environment:
      MQTT__Hostname:
      MQTT__Username:
      MQTT__Password:
      MQTT__Port:
      MQTT__UseSsl:
      Hosting__Host: http://+
      Hosting__Port: 80

networks:
  default:
    name: sf-network
    external: true
