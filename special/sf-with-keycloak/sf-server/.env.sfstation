# IP address, where SmartFace Station server will bind to
HOST=0.0.0.0

# Port number, where SmartFace Station server will bind to
PORT=8000

# Full addresses to SmartFace Server APIs
# CORE API example: http://[sf-server-host]:[port]/api/v1
CORE_API_ROOT=http://SFApi:80/api/v1

# Full address to SmartFace Server GraphQL APIs
GRAPHQL_ROOT=http://SFGraphQLApi:80/graphql

# example: CAM_PREVIEW_HOST_[camera.serviceName]=[sf-camera-host]
CAM_PREVIEW_HOST_SFCAM1=SFCam1
CAM_PREVIEW_HOST_SFCAM2=SFCam2
CAM_PREVIEW_HOST_SFCAM3=SFCam3
CAM_PREVIEW_HOST_SFCAM4=SFCam4
CAM_PREVIEW_HOST_SFCAM5=SFCam5

# Address to Access Controller gRPC endpoint
# Example: [sf-server-host]:[port]
ACCESS_CONTROLLER_ADDRESS=SFAccessController:80

# Comma separated Watchlist IDs used as a global blacklists
BLACKLIST_WATCHLIST_IDS=abcdabcd-abcd-1234-abcd-abcdabcdacd

# Score to percentage conversion parameters
SCORE_CONVERSION_LOWER_LIMIT=20
SCORE_CONVERSION_LOWER_LIMIT_PERCENTAGE=30
SCORE_CONVERSION_UPPER_LIMIT=40
SCORE_CONVERSION_UPPER_LIMIT_PERCENTAGE=90

# DOT camera parameters (HTTPS is required)
DOT_FACE_CAMERA_ENABLED=false
DOT_FACE_CAMERA_FACE_CENTER_LIMIT=0.2
DOT_FACE_CAMERA_FACE_CONFIDENCE=0.06 

# Wether to run with HTTPS authentication server or not
HTTPS_ENABLED=false
HTTPS_HOST_NAME=
HTTPS_KEY_FILE=server.key
HTTPS_CERT_FILE=server.cert

AUTH_HEADER=authorization

# Configure Keycloak authentication server
KEYCLOAK_AUTHENTICATION_ENABLED=true
KEYCLOAK_DOMAIN=http://$YOUR-SERVER-IP$:8080/auth
KEYCLOAK_REALM=master
KEYCLOAK_CLIENT_ID=smartgate-on-sface-demo-1w
KEYCLOAK_JWKS_URI="http://$YOUR-SERVER-IP$:8080/auth/realms/master/protocol/openid-connect/certs"
KEYCLOAK_ADMIN_URL=http://$YOUR-SERVER-IP$:8080/auth/admin

# Configure AUTH0 authentication server
AUTH0_AUTHENTICATION_ENABLED=false
AUTH0_AUDIENCE="https://www.audience.com"
AUTH0_DOMAIN="NEED-TO-GET-IT-FROM-AUTH0.auth0.com"
AUTH0_CLIENT_ID="NEED-TO-GET-IT-FROM-AUTH0"
AUTH0_ISSUER="https://NEED-TO-GET-IT-FROM-AUTH0.auth0.com/"
AUTH0_JWKS_URI="https://NEED-TO-GET-IT-FROM-AUTH0.us.auth0.com/.well-known/jwks.json"

# Setup for S3 / MinIO API
S3_ENDPOINT=http://minio:9000
S3_PUBLIC_ENDPOINT=http://localhost:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_REGION=eu-west-1
S3_BUCKET=inno-smartface
# If we are using s3/minio over https this determine if certificate needs to be valid or not
# for http version of s3/minio needs to be set to false
S3_SKIP_SSL=false
# Presigned URL expiration in seconds
S3_URL_EXPIRATION=300 # 5 minutes
# Create bucket if it doesn't exist already
S3_PRECREATE_BUCKET=true

# Add optional labels to watclist member (key is used in API requests, label is visual representation of key and used only in station frontend)
# WATCHLIST_MEMBER_KEY_0=date
# WATCHLIST_MEMBER_LABEL_0=Date of birth
# WATCHLIST_MEMBER_KEY_1=tax_number
# WATCHLIST_MEMBER_LABEL_1=Tax number
# WATCHLIST_MEMBER_KEY_2=phone
# WATCHLIST_MEMBER_LABEL_2=Phone number

# Optional roles are used for locking specified part of frontend for given roles
# Claim name is "Group mapper name" specified in Keycloak or "cognito:groups" in Cognito
# ROLES_CLAIM_NAME=sf_roles
# ROLE_KEY_ADMIN=/admin
# ROLE_KEY_SECURITY_SUPERVISOR=/security_supervisor
# ROLE_KEY_SECURITY_OPERATOR=/security_operator
# ROLE_KEY_ACCESS_SUPERVISOR=/access_supervisor
# ROLE_KEY_ACCESS_OPERATOR=/access_operator
# ROLE_KEY_INVESTIGATION_SUPERVISOR=/investigation_supervisor
# ROLE_KEY_INVESTIGATION_OPERATOR=/investigation_operator
# ROLE_KEY_SECURITY_ADMIN=/security_admin
# ROLE_KEY_ACCESS_ADMIN=/access_admin
# ROLE_KEY_INVESTIGATION_ADMIN=/investigation_admin
# FORCED_ROLE_NAME_0=/admin

# Enabled Identification page
IDENTIFICATION_ENABLED=false

# Configure logging
ENABLE_LOGGING=true
LOG_TO_FILE=false
LOG_FORMAT_JSON=false
LOG_FILE_PATH="%PROGRAMDATA%\\Innovatrics\\SmartFace Station\\sfs-station-%DATE%.log"
LOG_FILE_DATE_PATTERN="YYYY-MM-DD"
LOG_FILE_MAX_SIZE="20m"
LOG_FILE_MAX_FILES="1d"
LOG_LEVEL="info"

# Number of parallel register api calls for advanced registration page
BULK_MEMBER_REGISTER_PARALLELISM=4

# Face validation mode (predefined, none)
FACE_VALIDATION_MODE=predefined

# Enabled palms
PALMS_ENABLED=false