configs:
  loki_config:
    file: ./configuration/loki/loki-config.yaml
  prometheus_config:
    file: ./configuration/prometheus/prometheus.yml
  alloy_config:
    file: ./configuration/alloy/config.alloy

services:
  obsminio:
    extends:
      service: common
      file: docker-compose-common.yml
    image: "minio/minio:RELEASE.2022-06-02T02-11-04Z"
    profiles: [singlenode, multinode-aggregator]
    command: server /data --console-address ":9001"
    expose:
      - 9000
    ports:
      - "9901:9001"
    volumes:
      - minio_data:/data
    networks:
      observability:
    restart: unless-stopped

  obsminio_createbuckets:
    extends:
      service: common
      file: docker-compose-common.yml
    image: minio/mc
    profiles: [singlenode, multinode-aggregator]
    depends_on:
      obsminio:
        condition: service_started
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add obsminio http://obsminio:9000 minioadmin minioadmin;
      /usr/bin/mc mb obsminio/loki;
      /usr/bin/mc policy set public obsminio/loki;
      exit 0;
      "
    networks:
      observability:
  
  grafana:
    extends:
      service: common
      file: docker-compose-common.yml
    profiles: [singlenode, multinode-aggregator]
    image: grafana/grafana:10.1.4
    ports:
      - 9900:3000
    volumes:
      - ./configuration/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./configuration/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      observability:
    restart: unless-stopped
  
  loki:
    extends:
      service: common
      file: docker-compose-common.yml
    image: grafana/loki:2.9.1
    configs:
      - loki_config
    profiles: [singlenode, multinode-aggregator]
    depends_on:
      obsminio:
        condition: service_started
      obsminio_createbuckets:
        condition: service_completed_successfully
    volumes:
      - loki_data:/loki
    command: -config.file=/loki_config
    expose:
      - 3100
    ports:
      - 3100:3100
    networks:
      observability:
    restart: unless-stopped
  
  alloy:
    extends:
      service: common
      file: docker-compose-common.yml
    image: grafana/alloy:v1.5.0
    configs:
      - alloy_config
    profiles: [singlenode, multinode-scraper]
    entrypoint: [ "/bin/sh","-c" ]
    command:
      - |
        export HOSTNAME=$$(cat /etc/hostname)
        /bin/alloy run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data alloy_config
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - PROMETHEUS_URL=http://prometheus:9090/api/v1/write
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostname:/etc/hostname:ro
    ports:
      - 12345:12345
    networks:
      observability:
      sf-network:
    restart: unless-stopped

  # Jaeger tracing as configured here is solely for debug purposes. No data is stored!
  jaeger:
    extends:
      service: common
      file: docker-compose-common.yml
    image: "jaegertracing/all-in-one:1.39.0"
    profiles: [singlenode, multinode-scraper]
    command: ["--memory.max-traces=5000"]
    expose:
      - 4317
      - 5778
      - 16686
      - 14268
      - 14250
      - 9411
      - 5775
      - 6831
      - 6832
    ports:
      - "9903:16686"
    networks:
      sf-network:
        aliases:
          - jaeger
      observability:
    restart: unless-stopped
  
  nodeexporter:
    extends:
      service: common
      file: docker-compose-common.yml
    image: prom/node-exporter:v1.6.1
    profiles: [singlenode, multinode-scraper]
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      observability:
    restart: unless-stopped
  
  cadvisor:
    extends:
      service: common
      file: docker-compose-common.yml
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    profiles: [singlenode, multinode-scraper]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      observability:
    restart: unless-stopped
  
  prometheus:
    extends:
      service: common
      file: docker-compose-common.yml
    image: prom/prometheus:v2.47.0
    configs:
      - prometheus_config
    profiles: [singlenode, multinode-aggregator]
    volumes:
      - prometheus_data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '--config.file=/prometheus_config'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    user: root
    expose:
      - 9902
    ports:
      - 9902:9090
    networks:
      observability:
    restart: unless-stopped

volumes:
  minio_data:
  grafana_data:
  loki_data:
  prometheus_data:

networks:
  observability:
  sf-network:
    name: sf-network
    external: true
